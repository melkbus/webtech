@model WebApplication1.Models.EventCreateViewModel

@{
    ViewBag.Title = "Create Event";
}

@using (Html.BeginForm("FileUpload", "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <hr />
    <h2 style="margin-top:50px; margin-left:10px">Create your own event!</h2>

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.EventDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.EventDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.EventDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.TagName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="tags">

                @Html.EditorFor(m => m.TagName, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(m => m.TagName, "", new { @class = "text-danger" })
                <script type="text/javascript">
                    $(function () {
                        $('#TagName').tagsinput({
                            itemValue: 'value',
                            itemText: 'text',
                            typeahead: {
                                source: function (query) {
                                    return $.getJSON('cities.json');
                                }
                            }
                        });
                        $('#TagName').tagsinput('add', { "value": 1, "text": "Amsterdam" });
                        $('#TagName').tagsinput('add', { "value": 4, "text": "Washington" });
                        $('#TagName').tagsinput('add', { "value": 7, "text": "Sydney" });
                        $('#TagName').tagsinput('add', { "value": 10, "text": "Beijing" });
                        $('#TagName').tagsinput('add', { "value": 13, "text": "Cairo" });
                    })
                </script>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.EventBeginDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.EventBeginDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.EventBeginDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.EventBeginTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.EventBeginTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.EventBeginTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.EventEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.EventEndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.EventEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.EventEndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.EventEndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.EventEndTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.EventLocation, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.EventLocation, new { htmlAttributes = new { @class = "form-control", id = "Location" } })
                @Html.ValidationMessageFor(m => m.EventLocation, "", new { })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.EventPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.EventPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.EventPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div style="margin-left:135px; margin-bottom:10px" class="form-inline">
            <span class="form-group"><label>Picture</label></span>
            <span class="form-group" style="margin-left:40px"><input type="file" accept="image/*" aria-label="photo" name="ImageUpload" id="ImageUpload" /></span>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to Homepage", "Index")
    </div>
}

@*@Scripts.Render("~/bundles/jquery");
@Scripts.Render("~/bundles/bootstrap");*@
<script type="text/javascript">
    var input = document.getElementById('Location');

    google.maps.event.addDomListener(input, 'keydown', function (e) {
        if (e.keyCode == 13) {
            e.preventDefault();
        }
    });
    google.maps.event.addDomListener(window, 'load', function () {
        var places = new google.maps.places.Autocomplete(input);
    })
</script>
}
