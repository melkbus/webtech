@model WebApplication1.Models.EventCreateViewModel
@{
    ViewBag.Title = "Create Event";
}

@using (Html.BeginForm("FileUpload", "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
{


<div class="form-horizontal">
    <h4>Create your own event!</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ev.EventDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.ev.EventDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.ev.EventDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ev.EventDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.ev.EventDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.ev.EventDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ev.EventLocation, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.ev.EventLocation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.ev.EventLocation, "", new { })
        </div>
    </div>
        <input type="file" name="ImageUpload" id="ImageUpload" />
    

    <div class="form-group">
        @Html.LabelFor(m => m.ev.EventPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.ev.EventPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.ev.EventPrice, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCp5LTsTDiXo_TJtup2jYHnnZmlTF9Btxk&libraries=places"></script>
    <script type="text/javascript">
        google.maps.event.addDomListener(window, 'load', function () {
            var input = document.getElementById('ev.EventLocation');
            var places = new google.maps.places.Autocomplete(input);
        });
    </script>

}

